I"4/<p>I work on a variety of projects and write copious notes and documentation along the way but never quite make it to the final step of documenting the final products. I’ve attempted to create blogs on many different platforms with varying levels of cost and complexity, but I’ve always come back to using static site generators.</p>

<h2 id="types-of-blogs">Types of Blogs:</h2>

<p>I won’t go into great detail here but it’s worth mentioning the benefits and drawbacks of static site generators (SSG) like Jekyll over full Content Management Systems (CMS) like Wordpress. For simplicity you can view a static site generator as a happy medium between the basic html pages you created as your web site in your high school tech class and a full managed website with databases, servers and the sorts.</p>

<p>This is a general pros and cons list of using Jekyll + Github Pages over something like Wordpress with a web host:</p>

<h3 id="static-site-generator-pros">Static Site Generator Pros</h3>

<ul>
  <li>Free</li>
  <li>Simple / Lightweight</li>
  <li>Integrates with Github</li>
</ul>

<h3 id="static-site-generator-cons">Static Site Generator Cons</h3>

<ul>
  <li>Simple/Limited options for plugins</li>
  <li>Potential SEO limitations</li>
  <li>Lacks an admin page - requires more manual management</li>
</ul>

<h3 id="content-management-system-pros">Content Management System Pros</h3>

<ul>
  <li>Lots of Support/Plugins</li>
  <li>Easy / WYSIWYG</li>
  <li>SEO</li>
  <li>Administration panels</li>
</ul>

<h3 id="content-management-system-cons">Content Management System Cons</h3>

<ul>
  <li>Cost Money</li>
  <li>Subject to 3rd parties</li>
  <li>Can be bloated</li>
</ul>

<p>Both options are good, it’s really just a matter of what platform will fit the best for what you are trying to accomplish. I personally see static site generators used more in the technical world with portfolios and tech blogs. I use Github regularly for projects so it makes sense for me to use Jekyll with Github Pages.</p>

<h2 id="creating-this-blog">Creating this Blog</h2>

<p>One of the simplest ways to create a blog is to use a Jekyll theme that someone already created and then modify and add your own content to make it your own. You can create and manage everything directly through the Github web interface but I find it easier to test and troubleshoot locally on my computer before pushing to my Github repository.</p>

<h3 id="installing-jekyll">Installing Jekyll:</h3>

<p>This is assuming an ubuntu based linux distro</p>

<p>Dependencies</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo apt-get install ruby-full build-essential zlib1g-dev
</code></pre></div></div>

<p>Jekyll</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo gem install jekyll bundler
sudo gem install jekyll-sitemap
sudo gem install jekyll-paginate
sudo gem install jemoji
</code></pre></div></div>

<h3 id="using-jekyll">Using Jekyll</h3>

<p>I am using the flexible-jekyll theme by Artem Sheludko</p>

<p>you can fork and download the content like so:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone https://github.com/artemsheludko/flexible-jekyll.git
</code></pre></div></div>

<p>go into working directory:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd flexible-jekyll
</code></pre></div></div>

<p>Compile Pages:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jekyll serve
</code></pre></div></div>

<p>Your pages can now be viewed at</p>

<p>http://127.0.0.1:4000/flexible-jekyll/</p>

<h2 id="customizing-the-page">Customizing the Page</h2>

<p>The default file for customizing the main page is the <code class="language-plaintext highlighter-rouge">_config.yml</code></p>

<p>This is the default page:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">title</span><span class="pi">:</span> <span class="s">Hello, world! I'm David Freeman</span>
<span class="na">description</span><span class="pi">:</span> <span class="pi">&gt;</span> <span class="c1"># this means to ignore newlines until "baseurl:"</span>
  <span class="s">Write an awesome description for your new site here. You can edit this</span>
  <span class="s">line in _config.yml. It will appear in your document head meta (for</span>
  <span class="s">Google search results) and in your feed.xml site description.</span>
<span class="na">permalink</span><span class="pi">:</span> <span class="s1">'</span><span class="s">:title/'</span>
<span class="na">baseurl</span><span class="pi">:</span> <span class="s2">"</span><span class="s">/flexible-jekyll"</span> <span class="c1"># the subpath of your site, e.g. /blog</span>
<span class="na">url</span><span class="pi">:</span> <span class="s2">"</span><span class="s">"</span> <span class="c1"># the base hostname &amp; protocol for your site, e.g. http://example.com</span>
<span class="na">site-twitter</span><span class="pi">:</span> <span class="c1">#if your site has a twitter account, enter it here</span>

<span class="c1"># Author Settings</span>
<span class="na">author</span><span class="pi">:</span> <span class="s">David Freeman</span> <span class="c1"># add your name</span>
<span class="na">author-img</span><span class="pi">:</span> <span class="s">david-freeman.jpg</span> <span class="c1"># add your photo</span>
<span class="na">about-author</span><span class="pi">:</span> <span class="s">I am a web developer focusing on front-end development. Always hungry to keep learning.</span> <span class="c1"># add description</span>
<span class="na">social-twitter</span><span class="pi">:</span> <span class="c1"># add your Twitter handle</span>
<span class="na">social-facebook</span><span class="pi">:</span> <span class="c1"># add your Facebook handle</span>
<span class="na">social-github</span><span class="pi">:</span> <span class="s">artemsheludko</span> <span class="c1"># add your Github handle</span>
<span class="na">social-linkedin</span><span class="pi">:</span> <span class="c1"># add your Linkedin handle</span>
<span class="na">social-email</span><span class="pi">:</span> <span class="c1"># add your Email address</span>

<span class="c1"># Disqus</span>
<span class="na">discus-identifier</span><span class="pi">:</span> <span class="s">mr-brown</span> <span class="c1"># add your discus identifier</span>

<span class="c1"># Tracker</span>
<span class="na">analytics</span><span class="pi">:</span> <span class="c1"># Google Analytics</span>

<span class="c1"># Build Settings</span>
<span class="na">markdown</span><span class="pi">:</span> <span class="s">kramdown</span>
<span class="na">plugins</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">jekyll-sitemap</span>
  <span class="pi">-</span> <span class="s">jekyll-paginate</span>
  <span class="pi">-</span> <span class="s">jemoji</span>

<span class="na">paginate</span><span class="pi">:</span> <span class="m">8</span>
<span class="na">paginate_path</span><span class="pi">:</span> <span class="s2">"</span><span class="s">/page/:num"</span>

<span class="na">exclude</span><span class="pi">:</span> <span class="pi">[</span><span class="s2">"</span><span class="s">node_modules"</span><span class="pi">,</span> <span class="s2">"</span><span class="s">gulpfile.js"</span><span class="pi">,</span> <span class="s2">"</span><span class="s">package.json"</span><span class="pi">,</span> <span class="s2">"</span><span class="s">yarn.lock"</span><span class="pi">]</span>
</code></pre></div></div>

<p>You can switch out the relevant fields and add your own images and favicons under <code class="language-plaintext highlighter-rouge">flexible-jekyll/assets/img/</code> and <code class="language-plaintext highlighter-rouge">flexible-jekyll/assets/img/favicon/</code></p>

<h2 id="adding-posts">Adding Posts</h2>

<p>To create a post you’ll need to create a <code class="language-plaintext highlighter-rouge">.markdown</code> file in <code class="language-plaintext highlighter-rouge">flexible-jekyll/assets/posts/</code></p>

<p>The filename should have the pattern <code class="language-plaintext highlighter-rouge">YYYY-MM-DD-post-title.markdown</code> eg <code class="language-plaintext highlighter-rouge">2020-11-09-making-a-blog.markdown</code></p>

<p>The general header looks like this:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">post</span>
<span class="na">title</span><span class="pi">:</span> <span class="s">How to Make a Blog</span>
<span class="na">date</span><span class="pi">:</span> <span class="s">2020-11-09 5:30:00 +0800</span>
<span class="na">description</span><span class="pi">:</span> <span class="s">This post describes how to make a blog using Jekyll and Github Pages</span> <span class="c1"># Add post description (optional)</span>
<span class="na">img</span><span class="pi">:</span> <span class="s">making-a-blog.png</span> <span class="c1"># Add image post (optional)</span>
<span class="na">fig-caption</span><span class="pi">:</span> <span class="c1"># Add figcaption (optional)</span>
<span class="na">tags</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">Blog</span><span class="pi">,</span> <span class="nv">Writing</span><span class="pi">]</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>As above you’ll want to put any image assets in <code class="language-plaintext highlighter-rouge">flexible-jekyll/assets/img/</code>. All that’s left is to fill the body with content using the markdown format and save the markdown file and you’ve finished your first post.</p>

<h2 id="publishing-to-github">Publishing to Github</h2>

<p>Github is fairly flexible in how you publish your static page. Assuming you don’t have a custom domain, you can rename the <code class="language-plaintext highlighter-rouge">flexible-jekyll</code> repo name to your <code class="language-plaintext highlighter-rouge">githubhandle.github.io</code> and just set the <code class="language-plaintext highlighter-rouge">config_yml</code> baseurl to <code class="language-plaintext highlighter-rouge">baseurl: "/"</code>. If you have an existing domain you want to use you can use you can set it in your github repo settings and set the baseurl to <code class="language-plaintext highlighter-rouge">/blog</code> or whatever you like.</p>

<p>Github will publish your page from the master or master/docs or you can put it under a different branch called gh-pages. There isn’t a specific advantage to publishing in master vs a branch other than just how you want to organize your workflow. I generally like to separate the original fork from my changes and just cherry pick any updates but some people prefer to work directly off the master fork and thats fine too.</p>

<p>To publish to the master, once you’ve cloned and made your changes to your theme, these are the commands I use in the terminal:</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git add <span class="nt">-A</span>
git commit <span class="nt">-m</span> <span class="s2">"Initial Commits"</span>
git push origin master
</code></pre></div></div>
<p>If everything goes according to plan your site will shortly show up at the domain you configured, which in my case is <a href="https://anthonyblackham.github.io/blog/">https://anthonyblackham.github.io/blog/</a></p>

<h3 id="summary">Summary</h3>

<p>This is just the basic getting started tutorial but there are plenty of other options to tweak and modify the blog to make it unique and provide a platform that will showcase everything that you have to offer to the world.</p>

:ET